/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BitconeyToken, BitconeyTokenInterface } from "../BitconeyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a2d38038062001a2d8339818101604052810190620000379190620004fd565b8181816003908051906020019062000051929190620002b0565b5080600490805190602001906200006a929190620002b0565b505050620000a17fa7aa146c8ebf995e2884e2c462d97238bf99bcfa95e0e08fc4a348ba52995d4f60001b6200012a60201b60201c565b620000d57fd055cc67214329ede953bbf1399d422e26c6f0ace12c014103a6b819b7153eb560001b6200012a60201b60201c565b620001097fbfe6f9d3f272562c337735180582b779fcba6df6ce747df25349fbb54ea7a11b60001b6200012a60201b60201c565b6200012233660775f05a0740006200012d60201b60201c565b50506200072e565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200019790620005e3565b60405180910390fd5b620001b460008383620002a660201b60201c565b8060026000828254620001c891906200063e565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200021f91906200063e565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002869190620006ac565b60405180910390a3620002a260008383620002ab60201b60201c565b5050565b505050565b505050565b828054620002be90620006f8565b90600052602060002090601f016020900481019282620002e257600085556200032e565b82601f10620002fd57805160ff19168380011785556200032e565b828001600101855582156200032e579182015b828111156200032d57825182559160200191906001019062000310565b5b5090506200033d919062000341565b5090565b5b808211156200035c57600081600090555060010162000342565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003c9826200037e565b810181811067ffffffffffffffff82111715620003eb57620003ea6200038f565b5b80604052505050565b60006200040062000360565b90506200040e8282620003be565b919050565b600067ffffffffffffffff8211156200043157620004306200038f565b5b6200043c826200037e565b9050602081019050919050565b60005b83811015620004695780820151818401526020810190506200044c565b8381111562000479576000848401525b50505050565b600062000496620004908462000413565b620003f4565b905082815260208101848484011115620004b557620004b462000379565b5b620004c284828562000449565b509392505050565b600082601f830112620004e257620004e162000374565b5b8151620004f48482602086016200047f565b91505092915050565b600080604083850312156200051757620005166200036a565b5b600083015167ffffffffffffffff8111156200053857620005376200036f565b5b6200054685828601620004ca565b925050602083015167ffffffffffffffff8111156200056a57620005696200036f565b5b6200057885828601620004ca565b9150509250929050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005cb601f8362000582565b9150620005d88262000593565b602082019050919050565b60006020820190508181036000830152620005fe81620005bc565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200064b8262000605565b9150620006588362000605565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000690576200068f6200060f565b5b828201905092915050565b620006a68162000605565b82525050565b6000602082019050620006c360008301846200069b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200071157607f821691505b60208210811415620007285762000727620006c9565b5b50919050565b6112ef806200073e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610ba9565b60405180910390f35b6100e660048036038101906100e19190610c64565b610308565b6040516100f39190610cbf565b60405180910390f35b61010461032b565b6040516101119190610ce9565b60405180910390f35b610134600480360381019061012f9190610d04565b610335565b6040516101419190610cbf565b60405180910390f35b610152610364565b60405161015f9190610d73565b60405180910390f35b610182600480360381019061017d9190610c64565b6103f1565b60405161018f9190610cbf565b60405180910390f35b6101b260048036038101906101ad9190610d8e565b610428565b6040516101bf9190610ce9565b60405180910390f35b6101d0610470565b6040516101dd9190610ba9565b60405180910390f35b61020060048036038101906101fb9190610c64565b610502565b60405161020d9190610cbf565b60405180910390f35b610230600480360381019061022b9190610c64565b610579565b60405161023d9190610cbf565b60405180910390f35b610260600480360381019061025b9190610dbb565b61059c565b60405161026d9190610ce9565b60405180910390f35b60606003805461028590610e2a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610e2a565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600080610313610623565b905061032081858561062b565b600191505092915050565b6000600254905090565b600080610340610623565b905061034d8582856107f6565b610358858585610882565b60019150509392505050565b60006103927facadb7d1bd8d3186c66e50dde2c5b87755438a389419ae06bffb858d2eca2eb660001b610b03565b6103be7fd584edc01bdfae1bb1a890ce1e08719700a11cf61b8fa058e1a1ebf33f33653c60001b610b03565b6103ea7f65f0945262fc2d33361a8002165dbcc05db23233670faabea419397221be0ff460001b610b03565b6008905090565b6000806103fc610623565b905061041d81858561040e858961059c565b6104189190610e8b565b61062b565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461047f90610e2a565b80601f01602080910402602001604051908101604052809291908181526020018280546104ab90610e2a565b80156104f85780601f106104cd576101008083540402835291602001916104f8565b820191906000526020600020905b8154815290600101906020018083116104db57829003601f168201915b5050505050905090565b60008061050d610623565b9050600061051b828661059c565b905083811015610560576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055790610f53565b60405180910390fd5b61056d828686840361062b565b60019250505092915050565b600080610584610623565b9050610591818585610882565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290610fe5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561070b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070290611077565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107e99190610ce9565b60405180910390a3505050565b6000610802848461059c565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461087c578181101561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906110e3565b60405180910390fd5b61087b848484840361062b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e990611175565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610962576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095990611207565b60405180910390fd5b61096d838383610b06565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea90611299565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a869190610e8b565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610aea9190610ce9565b60405180910390a3610afd848484610b0b565b50505050565b50565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b4a578082015181840152602081019050610b2f565b83811115610b59576000848401525b50505050565b6000601f19601f8301169050919050565b6000610b7b82610b10565b610b858185610b1b565b9350610b95818560208601610b2c565b610b9e81610b5f565b840191505092915050565b60006020820190508181036000830152610bc38184610b70565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bfb82610bd0565b9050919050565b610c0b81610bf0565b8114610c1657600080fd5b50565b600081359050610c2881610c02565b92915050565b6000819050919050565b610c4181610c2e565b8114610c4c57600080fd5b50565b600081359050610c5e81610c38565b92915050565b60008060408385031215610c7b57610c7a610bcb565b5b6000610c8985828601610c19565b9250506020610c9a85828601610c4f565b9150509250929050565b60008115159050919050565b610cb981610ca4565b82525050565b6000602082019050610cd46000830184610cb0565b92915050565b610ce381610c2e565b82525050565b6000602082019050610cfe6000830184610cda565b92915050565b600080600060608486031215610d1d57610d1c610bcb565b5b6000610d2b86828701610c19565b9350506020610d3c86828701610c19565b9250506040610d4d86828701610c4f565b9150509250925092565b600060ff82169050919050565b610d6d81610d57565b82525050565b6000602082019050610d886000830184610d64565b92915050565b600060208284031215610da457610da3610bcb565b5b6000610db284828501610c19565b91505092915050565b60008060408385031215610dd257610dd1610bcb565b5b6000610de085828601610c19565b9250506020610df185828601610c19565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e4257607f821691505b60208210811415610e5657610e55610dfb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e9682610c2e565b9150610ea183610c2e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ed657610ed5610e5c565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610f3d602583610b1b565b9150610f4882610ee1565b604082019050919050565b60006020820190508181036000830152610f6c81610f30565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610fcf602483610b1b565b9150610fda82610f73565b604082019050919050565b60006020820190508181036000830152610ffe81610fc2565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611061602283610b1b565b915061106c82611005565b604082019050919050565b6000602082019050818103600083015261109081611054565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006110cd601d83610b1b565b91506110d882611097565b602082019050919050565b600060208201905081810360008301526110fc816110c0565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061115f602583610b1b565b915061116a82611103565b604082019050919050565b6000602082019050818103600083015261118e81611152565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006111f1602383610b1b565b91506111fc82611195565b604082019050919050565b60006020820190508181036000830152611220816111e4565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611283602683610b1b565b915061128e82611227565b604082019050919050565b600060208201905081810360008301526112b281611276565b905091905056fea26469706673582212200b6a04a647a77b06bfb1c1d3aafc1d5c0d4d064051a5c00e6eaf0d3ff5a638c864736f6c634300080a0033";

export class BitconeyToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BitconeyToken> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<BitconeyToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): BitconeyToken {
    return super.attach(address) as BitconeyToken;
  }
  connect(signer: Signer): BitconeyToken__factory {
    return super.connect(signer) as BitconeyToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BitconeyTokenInterface {
    return new utils.Interface(_abi) as BitconeyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BitconeyToken {
    return new Contract(address, _abi, signerOrProvider) as BitconeyToken;
  }
}
